import { Plugin } from 'vite';
import { GetLoadContext } from './react-router.js';
import 'hono';
import 'react-router';

interface Adapter {
    env?: Record<string, unknown> | Promise<Record<string, unknown>>;
    onServerClose?: () => Promise<void>;
    executionContext?: {
        waitUntil(promise: Promise<unknown>): void;
        passThroughOnException(): void;
    };
}
interface Options {
    entry: string;
    adapter?: () => Adapter | Promise<Adapter>;
    getLoadContext?: GetLoadContext;
    exclude?: (string | RegExp)[];
}
declare const _default: (options: Options) => Plugin;

export { _default as default };
